package org.engcia.bayessample

import org.sibac.bayes.model.FactBayes;
import org.sibac.bayes.model.Evidence;
import org.sibac.bayes.model.Hypothesis;
import org.sibac.bayes.listeners.TrackingAgendaListener
import org.sibac.bayes.model.Conclusion
import org.sibac.bayes.model.FrameProduct
import org.sibac.bayes.model.FrameTeam
import java.util.ArrayList
import java.util.List
import java.util.Arrays;
//rule1
rule "Do you know your needs? No"

salience 100
/*lock-on-active true*/
when
	Evidence( description == "Do you know what your business needs?", value == "no" )
then
	System.out.println("rule Business needs no triggered");
	insert(new Hypothesis(1.0, "Frame: Product-constrained", "yes"));
end

//rule2
rule "Frame:Product-constrained, what is your TRL?"
salience 80
/*lock-on-active true*/
when
	Hypothesis(description == "Frame: Product-constrained", value == "yes")
	$FrameProduct : FrameProduct(probability==1.0, description == "What is your TRL? [value 1-4]", $value : value )
then
    System.out.println("rule Frame: Product triggered");
    insert(new Conclusion("You current succcess probability based on TRL is " + $FrameProduct.getScore() * 100 + "%. Try identifying what your business needs and try again!"));
end


//rule3
rule "Do you know your needs? Yes"

salience 100
/*lock-on-active true*/
when
	Evidence( description == "Do you know what your business needs?", value == "yes" )
then
	System.out.println("rule Business needs yes triggered");
	insert(new Hypothesis(1.0, "Frame: Team", "yes"));
	insert(new FrameTeam(1.0, "Frame: Team", "yes"));
end

//rule4
rule "Frame: Team"
salience 80
/*lock-on-active true*/
when
	Hypothesis(description == "Frame: Team", value == "yes")
	$TS : Evidence(probability==1.0, description == "Do you have the technical skills?", $TSvalue : value )
	$AS : Evidence(probability==1.0, description == "Do you have the analytical skills?", $ASvalue : value )
	$MS : Evidence(probability==1.0, description == "Do you have the marketing skills?", $MSvalue : value )
	$Experience : Evidence(probability==1.0, description == "Do you have previous experience as a team?", $ExperienceValue : value )
	$Goals : Evidence(probability==1.0, description == "Are your personal goals aligned with the start-up vision?", $GoalValue : value )
	$Expertise : Evidence(probability==1.0, description == "Do your team or advisors have industry expertise?", $ExpertiseVvalue : value )
    $FrameTeam : FrameTeam()
then
    System.out.println("rule Frame: Team triggered yes");
    System.out.println($TSvalue);
    System.out.println($ASvalue);
    System.out.println($MSvalue);
    System.out.println($ExperienceValue);
    System.out.println($GoalValue);
    System.out.println($ExpertiseVvalue);

    System.out.println($FrameTeam.calculateTeamScore($TSvalue, $ASvalue, $MSvalue, $GoalValue, $ExperienceValue, $ExpertiseVvalue));

    insert(new Conclusion("Frame:Team", $FrameTeam.calculateTeamScore($TSvalue, $ASvalue, $MSvalue, $GoalValue, $ExperienceValue, $ExpertiseVvalue), $FrameTeam.getExplanation($TSvalue, $ASvalue, $MSvalue, $GoalValue, $ExperienceValue, $ExpertiseVvalue)));
    insert(new Hypothesis(1.0, "Frame: Product", "yes"));
end

//rule5
rule "Frame: Product, what is your TRL?"
salience 50
when
   Hypothesis(description == "Frame: Product", value == "yes")
   $FrameProduct : FrameProduct(probability==1.0, description == "What is your TRL? [value 1-9]", $value : value )
   $Conclusion : Conclusion(description=="Frame:Team")
then
    System.out.println("rule Frame: Product triggered");
    insert(new Conclusion("Frame:Product", $Conclusion.getCount() + $FrameProduct.getScore(), $Conclusion.addExplanationToList($Conclusion.getExplanation(), $FrameProduct.getExplanation($FrameProduct.getScore()))));
end

//rule6
rule "Do you have competitors? No"
salience 40
when
	Evidence(probability == 1.0, description == "Do you have competitors?", value == "no" )
then
	System.out.println("rule competitors triggered no");
	insert(new Hypothesis(1.0, "Frame: Traction no", "yes"));
end

//rule7
rule "Convert TractionEvidence values to probabilities"
salience 40
when
    Evidence(probability == 1.0, description == "From 1 to 10, how good is your LTV?", $LTVvalue : value)
    Evidence(probability == 1.0, description == "From 1 to 10, how good is your engagement rate?", $interest : value)
then
	System.out.println("rule convert probs triggered");
	insert(new Hypothesis(Double.valueOf($LTVvalue) * 0.1, "LTV", "yes"));
	insert(new Hypothesis(Double.valueOf($interest) * 0.1, "Interest", "yes"));

	insert(new Hypothesis(Double.valueOf($LTVvalue) * 0.1, "LTVprob", "yes"));
	insert(new Hypothesis(Double.valueOf($interest) * 0.1, "InterestProb", "yes"));
end

//rule8
rule "Use hypothesis to calculate P(Traction|LTV)"
@LS1(4.0)
@LN1(2.5)
salience 30
when
    Hypothesis(description == "LTV", value == "yes")
then
	System.out.println("rule LTV traction triggered");
    TrackingAgendaListener.getFactRef(Hypothesis.class, "LTVprob", "yes").update();
end

//rule9
rule "Use hypothesis to calculate P(Traction|Interest)"
@LS1(9.0)
@LN1(0.11)
salience 30
when
    Hypothesis(description == "Interest", value == "yes")
then
	System.out.println("rule Interest traction triggered");
    TrackingAgendaListener.getFactRef(Hypothesis.class, "InterestProb", "yes").update();
end

//rule10
rule "Create hypotehsis that holds conditional prob of P(interest)*P(LTV)"
salience 25
when
    $LTV : Hypothesis(description == "LTVprob", value == "yes")
    $interest : Hypothesis(description == "InterestProb", value == "yes")
then
    System.out.println("cond prob");
    insert(new Hypothesis($LTV.getProbability() * $interest.getProbability(), "P(Traction|LTV|Interest)", "yes"));
end

//rule11
rule "Use hypothesis to calculate P(Traction|LTV|Interest)"
@LS1(9.0)
@LN1(0.67)
@LS2(1.5)
@LN2(0.11)
salience 10
when
    Hypothesis(description == "LTVprob", value == "yes")
    Hypothesis(description == "InterestProb", value == "yes")
then
    System.out.println("Working?");
    TrackingAgendaListener.getFactRef(Hypothesis.class, "P(Traction|LTV|Interest)", "yes").update();
end

//rule12
rule "Frame: Traction"
salience 9
when
   Hypothesis(description == "Frame: Traction no", value== "yes")
   $Hypothesis : Hypothesis(description == "P(Traction|LTV|Interest)", value == "yes")
   $Conclusion : Conclusion(description=="Frame:Product")
   $LTV : Hypothesis(description == "LTV", value == "yes")
   $Interest : Hypothesis(description == "Interest", value == "yes")
then
    System.out.println();
    System.out.println("rule Frame: Traction triggered");
    double probability = $Conclusion.getCount() + $Hypothesis.getProbability() * 0.2;
    insert(new Conclusion("Frame:Traction", probability, $Conclusion.addExplanationToList($Conclusion.getExplanation(), $Conclusion.getTractionExplanation($LTV.getProbability(), $Interest.getProbability(), probability))));
end


//rule13
rule "Do you have competitors? Yes"
salience 20
when
	Evidence(probability == 1.0, description == "Do you have competitors?", value == "yes" )
then
	System.out.println("rule competitors triggered yes");
	insert(new Hypothesis(1.0, "Can you protect your technology?", "yes"));
end


//rule14
rule "Can you protect your technology? Yes"
salience 20
when
	Hypothesis(description == "Can you protect your technology?", value == "yes" )
	Evidence( description == "Can you protect your technology?", value == "yes" )
	$Conclusion : Conclusion(description=="Frame:Product")
then
	System.out.println("rule protect technology triggered yes");
	double probability = $Conclusion.getCount() + 0.1;
	insert(new Conclusion("IP", probability, $Conclusion.addExplanationToList($Conclusion.getExplanation(), $Conclusion.getProtectYesExplanation(probability))));
	insert(new Hypothesis(1.0, "Frame: Traction + IP", "yes"));
end

//rule15 same as 12
rule "Frame: Traction + IP"
salience 9
when
   Hypothesis(description == "Frame: Traction + IP", value =="yes")
   $Hypothesis : Hypothesis(description == "P(Traction|LTV|Interest)", value == "yes")
   $Conclusion : Conclusion(description=="IP")
   $LTV : Hypothesis(description == "LTV", value == "yes")
   $Interest : Hypothesis(description == "Interest", value == "yes")
then
    System.out.println("rule Frame: Traction triggered");
    double probability = $Conclusion.getCount() + $Hypothesis.getProbability() * 0.2;
    insert(new Conclusion("Frame:Traction", probability, $Conclusion.addExplanationToList($Conclusion.getExplanation(), $Conclusion.getTractionExplanation($LTV.getProbability(), $Interest.getProbability(), probability))));
end


//rule16
rule "Input SAM and MoneyToMarket values to ratio"
salience 8
when
    Evidence(probability==1.0, description == "What’s your SAM within 5 years?", $SAM : value )
    Evidence(probability==1.0, description == "How much money do you need to enter a market?", $money2market : value )
    Evidence(probability==1.0, description == "What’s your TAM within 5 years?", $TAM : value )
then
	System.out.println("rule input SAM & Money triggered");
	Double probabilitySamtoMoney =  Double.valueOf($SAM) / Double.valueOf($money2market) > 9 ? 0.8 : 0.2;
	Double probabilityTamToSam = Double.valueOf($TAM) / Double.valueOf($SAM) > 9 ? 1.0 : 0.0;

//	insert(new Hypothesis(probabilitySamtoMoney, "SAM/money2market", "yes"));
	insert(new Hypothesis(probabilitySamtoMoney, "SAM/money2marketProb", "yes"));
//	insert(new Hypothesis(probabilityTamToSam, "TAM/SAM", "yes"));
	insert(new Hypothesis(probabilityTamToSam, "TAM/SAMProb", "yes"));
end

//rule17
rule "Create hypothesis Market that holds prob of SAM/Money > 9?"
salience 5
when
    $Hypothesis : Hypothesis(description == "SAM/money2marketProb", value == "yes")
then
    System.out.println("cond prob TAM, SAM, Money");
    insert(new Hypothesis($Hypothesis.getProbability(), "Market", "yes"));
end

//rule18
rule "Probability of market opportunity"
@LS1(9.0)
@LN1(1.0)
@LS2(0.67)
@LN2(0.11)
salience 1
when
    Hypothesis(description == "SAM/money2marketProb", value == "yes")
    Hypothesis(description == "TAM/SAMProb", value == "yes")
then
    System.out.println("rule market opportunity prob");
    TrackingAgendaListener.getFactRef(Hypothesis.class, "Market", "yes").update();
end

//rule19
rule "Frame: Market"
salience 9
when
   $Hypothesis : Hypothesis(description == "Market", value == "yes")
   $Conclusion : Conclusion(description=="Frame:Traction")
then
    System.out.println("rule Frame: Traction triggered");
    insert(new Conclusion("Frame:Market", $Conclusion.getCount() + $Hypothesis.getProbability() * 0.18));
end