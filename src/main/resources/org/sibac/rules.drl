package org.engcia.bayessample

import org.sibac.bayes.model.FactBayes;
import org.sibac.bayes.model.Evidence;
import org.sibac.bayes.model.Hypothesis;
import org.sibac.bayes.listeners.TrackingAgendaListener
import org.sibac.bayes.model.Conclusion
import org.sibac.bayes.model.FrameProduct
import org.sibac.bayes.model.FrameTeam
import java.util.ArrayList
import java.util.List
import java.util.Arrays
import java.util.HashSet
import java.util.stream.Collectors;

/*
 RULE 1 - Do you know your needs? No
*/
rule "Do you know your needs? No"
salience 100
when
	Evidence( description == "Do you know what your business needs?", value == "no" )
then
	insert(new Hypothesis(1.0, "Frame: Product-constrained", "yes"));
	insert(new Conclusion("Needs no"));
end

/*
 RULE 2 - Frame:Product-constrained, what is your TRL?
*/
rule "Frame:Product-constrained, what is your TRL?"
salience 80
when
	Hypothesis(description == "Frame: Product-constrained", value == "yes")
	$FrameProduct : FrameProduct(probability==1.0, description == "What is your TRL? [value 1-4]", $value : value )
	$Conclusion : Conclusion(description=="Needs no")
then
    Double probability = $FrameProduct.getScore();
    insert(new Conclusion("Frame:Product-constrained", probability, $Conclusion.addExplanationToList($Conclusion.getExplanation(), $Conclusion.setBusinessNeedsNoExplanation($FrameProduct.getScore()))));
end


/*
 RULE 3 - Do you know your needs? Yes
*/
rule "Do you know your needs? Yes"
salience 100
when
	Evidence( description == "Do you know what your business needs?", value == "yes" )
then
	insert(new Hypothesis(1.0, "Frame: Team", "yes"));
	insert(new FrameTeam(1.0, "Frame: Team", "yes"));
	insert(new Conclusion("Needs yes"));
end

/*
 RULE 4 - Frame: Team
*/
rule "Frame: Team"
salience 80
when
	Hypothesis(description == "Frame: Team", value == "yes")
	$TS : Evidence(probability==1.0, description == "Do you have the technical skills?", $TSvalue : value )
	$AS : Evidence(probability==1.0, description == "Do you have the analytical skills?", $ASvalue : value )
	$MS : Evidence(probability==1.0, description == "Do you have the marketing skills?", $MSvalue : value )
	$Experience : Evidence(probability==1.0, description == "Do you have previous experience as a team?", $ExperienceValue : value )
	$Goals : Evidence(probability==1.0, description == "Are your personal goals aligned with the start-up vision?", $GoalValue : value )
	$Expertise : Evidence(probability==1.0, description == "Do your team or advisors have industry expertise?", $ExpertiseVvalue : value )
    $Conclusion : Conclusion(description=="Needs yes")
    $FrameTeam : FrameTeam()
then
    insert(new Conclusion("Frame:Team", $FrameTeam.calculateTeamScore($TSvalue, $ASvalue, $MSvalue, $GoalValue, $ExperienceValue, $ExpertiseVvalue), $Conclusion.addExplanationListToList(new ArrayList<String>(), $FrameTeam.getExplanation($TSvalue, $ASvalue, $MSvalue, $GoalValue, $ExperienceValue, $ExpertiseVvalue))));
    insert(new Hypothesis(1.0, "Frame: Product", "yes"));
end

/*
 RULE 5 - Frame: Product, what is your TRL?
*/
rule "Frame: Product, what is your TRL?"
salience 60
when
   Hypothesis(description == "Frame: Product", value == "yes")
   $FrameProduct : FrameProduct(probability==1.0, description == "What is your TRL? [value 1-9]", $value : value )
   $Conclusion : Conclusion(description=="Frame:Team")
then
    Double probability = $Conclusion.getCount() + $FrameProduct.getScore();
    insert(new Conclusion("Frame:Product", probability, $Conclusion.addExplanationToList($Conclusion.getExplanation(), $FrameProduct.getExplanation(probability))));
end

/*
 RULE 6 - Do you have competitors? No branch
*/
rule "Do you have competitors? No"
salience 50
when
	Evidence(probability == 1.0, description == "Do you have competitors?", value == "no" )
then
	insert(new Hypothesis(1.0, "Frame: Traction no", "yes"));
end

/*
 RULE 7 - Convert TractionEvidence values to probabilities
*/
rule "Convert TractionEvidence values to probabilities"
salience 30
when
    Evidence(probability == 1.0, description == "From 1 to 10, how good is your LTV?", $LTV : value)
    Evidence(probability == 1.0, description == "From 1 to 10, how good is your engagement rate?", $interest : value)
then
	insert(new Hypothesis(Double.valueOf($LTV) * 0.1, "LTV", "yes"));
	insert(new Hypothesis(Double.valueOf($interest) * 0.1, "Interest", "yes"));

	insert(new Hypothesis(Double.valueOf($LTV) * 0.1, "LTVprob", "yes"));
	insert(new Hypothesis(Double.valueOf($interest) * 0.1, "InterestProb", "yes"));
end

/*
 RULE 8 - Calculate hypothesis entitled P(Traction|LTV)
*/
rule "Calculate hypothesis entitled P(Traction|LTV)"
@LS1(4.0)
@LN1(2.5)
salience 29
when
    Hypothesis(description == "LTV", value == "yes")
then
    TrackingAgendaListener.getFactRef(Hypothesis.class, "LTVprob", "yes").update();
end

/*
 RULE 9 - Calculate hypothesis entitled P(Traction|Interest)
*/
rule "Calculate hypothesis entitled P(Traction|Interest)"
@LS1(9.0)
@LN1(0.11)
salience 28
when
    Hypothesis(description == "Interest", value == "yes")
then
    TrackingAgendaListener.getFactRef(Hypothesis.class, "InterestProb", "yes").update();
end

/*
 RULE 10 - Creation of hypotehsis that holds conditional probability of P(interest)*P(LTV)
*/
rule "Creation of hypotehsis that holds conditional probability of P(interest)*P(LTV)"
salience 27
when
    $LTV : Hypothesis(description == "LTVprob", value == "yes")
    $interest : Hypothesis(description == "InterestProb", value == "yes")
then
    insert(new Hypothesis($LTV.getProbability() * $interest.getProbability(), "P(Traction|LTV|Interest)", "yes"));
end

/*
 RULE 11 - Calculate hypothesis entitled P(Traction|LTV|Interest)
*/
rule "Calculate hypothesis entitled P(Traction|LTV|Interest)"
@LS1(9.0)
@LN1(0.67)
@LS2(1.5)
@LN2(0.11)
salience 25
when
    Hypothesis(description == "LTVprob", value == "yes")
    Hypothesis(description == "InterestProb", value == "yes")
then
    TrackingAgendaListener.getFactRef(Hypothesis.class, "P(Traction|LTV|Interest)", "yes").update();
end

/*
 RULE 12 - Do you have competitors? No-branch. Frame: Traction
*/
rule "Frame: Traction"
salience 20
when
   Hypothesis(description == "Frame: Traction no", value== "yes")
   $Hypothesis : Hypothesis(description == "P(Traction|LTV|Interest)", value == "yes")
   $Conclusion : Conclusion(description=="Frame:Product")
   $LTV : Hypothesis(description == "LTV", value == "yes")
   $Interest : Hypothesis(description == "Interest", value == "yes")
then
    Double probability = $Conclusion.getCount() + $Hypothesis.getProbability() * 0.2;
    insert(new Conclusion("Frame:Traction", probability, $Conclusion.addExplanationToList($Conclusion.getExplanation(), $Conclusion.setTractionExplanation($LTV.getProbability(), $Interest.getProbability(), probability))));
end

/*
 RULE 13 - Do you have competitors? Yes
*/
rule "Do you have competitors? Yes"
salience 50
when
	Evidence(probability == 1.0, description == "Do you have competitors?", value == "yes" )
then
	insert(new Hypothesis(1.0, "Can you protect your technology?", "yes"));
end

/*
 RULE 14 - Can you protect your technology? Yes
*/
rule "Can you protect your technology? Yes"
salience 40
when
	Hypothesis(description == "Can you protect your technology?", value == "yes" )
	Evidence( description == "Can you protect your technology?", value == "yes" )
	$Conclusion : Conclusion(description=="Frame:Product")
then
	Double probability = $Conclusion.getCount() + 0.1;
	insert(new Conclusion("IP", probability, $Conclusion.addExplanationToList($Conclusion.getExplanation(), $Conclusion.setProtectYesExplanation(probability))));
	insert(new Hypothesis(1.0, "Frame: Traction + IP", "yes"));
end

/*
 RULE 15 - Frame: Traction when IP is set to YES branch
*/
rule "Frame: Traction + IP"
salience 20
when
   Hypothesis(description == "Frame: Traction + IP", value =="yes")
   $Hypothesis : Hypothesis(description == "P(Traction|LTV|Interest)", value == "yes")
   $Conclusion : Conclusion(description=="IP")
   $LTV : Hypothesis(description == "LTV", value == "yes")
   $Interest : Hypothesis(description == "Interest", value == "yes")
then
    Double probability = $Conclusion.getCount() + $Hypothesis.getProbability() * 0.2;
    insert(new Conclusion("Frame:Traction", probability, $Conclusion.addExplanationToList($Conclusion.getExplanation(), $Conclusion.setTractionExplanation($LTV.getProbability(), $Interest.getProbability(), probability))));
end

/*
 RULE 16 - Variables SAM and MoneyToMarket values to ratio value
*/
rule "Variables SAM and MoneyToMarket values to ratio value"
salience 15
when
    Evidence(probability==1.0, description == "What’s your SAM within 5 years?", $SAM : value )
    Evidence(probability==1.0, description == "How much money do you need to enter a market?", $money2market : value )
    Evidence(probability==1.0, description == "What’s your TAM within 5 years?", $TAM : value )
then
	Double SamtoMoney =  Double.valueOf($SAM) / Double.valueOf($money2market);
	Double TamToSam = Double.valueOf($TAM) / Double.valueOf($SAM);
	Double probabilitySamtoMoney = SamtoMoney > 9 ? 0.8 : 0.2;
	Double probabilityTamToSam = TamToSam > 9 ? 1.0 : 0.0;

	insert(new Hypothesis(SamtoMoney, "SAM/money2market", "yes"));
	insert(new Hypothesis(probabilitySamtoMoney, "SAM/money2marketProb", "yes"));
	insert(new Hypothesis(TamToSam, "TAM/SAM", "yes"));
	insert(new Hypothesis(probabilityTamToSam, "TAM/SAMProb", "yes"));
end

/*
 RULE 17 - Creation of hypothesis Market that holds prob of SAM/Money > 9
*/
rule "Creation of hypothesis Market that holds prob of SAM/Money > 9"
salience 14
when
    $Hypothesis : Hypothesis(description == "SAM/money2marketProb", value == "yes")
then
    insert(new Hypothesis($Hypothesis.getProbability(), "Market", "yes"));
end

/*
 RULE 18 - Probability of market opportunity - sets the weights for SAM/Money and TAM/SAM
*/
rule "Probability of market opportunity"
@LS1(9.0)
@LN1(1.0)
@LS2(0.67)
@LN2(0.11)
salience 13
when
    Hypothesis(description == "SAM/money2marketProb", value == "yes")
    Hypothesis(description == "TAM/SAMProb", value == "yes")
then
    TrackingAgendaListener.getFactRef(Hypothesis.class, "Market", "yes").update();
end

/*
 RULE 19 - Frame: Market-opportunity - sets a whole explanation list
*/
rule "Frame: Market-opportunity"
salience 10
when
    $Hypothesis : Hypothesis(description == "Market", value == "yes")
    $Conclusion : Conclusion(description=="Frame:Traction")
    $H1 : Hypothesis(description == "SAM/money2market", value == "yes")
    $H2 : Hypothesis(description == "TAM/SAM", value == "yes")
then
    Double probability = $Conclusion.getCount() + $Hypothesis.getProbability() * 0.18;
    insert(new Conclusion("Frame:Market", probability, $Conclusion.addExplanationToList($Conclusion.getExplanation(), $Conclusion.setOpportunityExplanation(probability, $H1.getProbability(), $H2.getProbability()))));
end

/*
 RULE 20 - Final conclusion - Print
*/
rule "Final conclusion. Print"
salience 5
when
    $Conclusion : Conclusion(description=="Frame:Market")
then
    $Conclusion.getExplanation().forEach(System.out::println);
end

/*
 RULE 21 - Do you know your needs? no - Print
*/
rule "Do you know your need? Print"
salience 4
when
   $Conclusion : Conclusion(description=="Frame:Product-constrained")
then
    $Conclusion.getExplanation().forEach(System.out::println);
end